{"version":3,"sources":["img/iansarker.jpg","components/Sidebar.js","components/About.js","components/Publicaions.js","components/Interest.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","info","this","props","className","src","Image","alt","name","dept","institute","email","Component","About","about","React","Publicaions","publicationList","publications","map","publication","key","id","toString","title","interestList","interests","interest","Content","content","Interest","App","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mIAAAA,EAAOC,QAAU,IAA0B,uC,sRCOtBC,E,iLAEb,IAAMC,EAAOC,KAAKC,MAAMF,KACxB,OACI,yBAAKG,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,SAASC,IAAKC,IAAOC,IAAI,WAE5C,wBAAIH,UAAU,oBAAoBH,EAAKO,MACvC,yBAAKJ,UAAU,QACX,2BAAIH,EAAKQ,KAAT,KACA,2BAAIR,EAAKS,WACT,6BACI,4BAAQN,UAAU,UAAlB,WACA,8BAAOH,EAAKU,c,GAdCC,aCYtBC,G,uLAXP,OACI,yBAAKT,UAAU,aACX,wBAAIA,UAAU,uBAAd,SACA,yBAAKA,UAAU,WACX,2BAAIF,KAAKC,MAAMW,a,GANfC,IAAMH,YCsBXI,G,sLArBP,IAEMC,EAFef,KAAKC,MAAMe,aAEKC,KAAI,SAAAC,GACrC,OACI,wBAAIhB,UAAU,YAAYiB,IAAKD,EAAYE,GAAGC,YAAaH,EAAYI,UAI/E,OACI,yBAAKpB,UAAU,aACX,wBAAIA,UAAU,uBAAd,eACA,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,mBACTa,S,GAfCF,IAAMH,YCsBjBI,E,iLApBP,IACMS,EADYvB,KAAKC,MAAMuB,UACEP,KAAI,SAAAQ,GAC/B,OACI,wBAAIvB,UAAU,YAAYiB,IAAKM,EAASL,IAAKK,EAASnB,SAI9D,OACI,yBAAKJ,UAAU,aACX,wBAAIA,UAAU,uBAAd,aACA,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,mBACTqB,S,GAdCV,IAAMH,WCGXgB,G,uLAEb,IAAMC,EAAU3B,KAAKC,MAAM0B,QAC3B,OACI,yBAAKzB,UAAU,WACvB,kBAAC,EAAD,CAAOU,MAAOe,EAAQf,QACV,kBAAC,EAAD,CAAaI,aAAcW,EAAQX,eACnC,kBAACY,EAAD,CAAUJ,UAAWG,EAAQH,iB,GAPRd,cC6CtBmB,E,YA5Cd,WAAY5B,GAAQ,IAAD,8BAClB,4CAAMA,KACD6B,MAAQ,CACZ/B,KAAM,CACLO,KAAM,cACNC,KAAM,+CACNC,UAAW,0CACXC,MAAO,8BAERkB,QAAS,CACRf,MAAO,iXAKPI,aAAc,CACb,CACCI,GAAI,EACJE,MAAO,kNAITE,UAAW,CACV,CAACJ,GAAI,EAAGd,KAAM,oBACd,CAACc,GAAI,EAAGd,KAAM,mBACd,CAACc,GAAI,EAAGd,KAAM,2BACd,CAACc,GAAI,EAAGd,KAAM,cACd,CAACc,GAAI,EAAGd,KAAM,iBA3BC,E,sEAmClB,OACC,yBAAKJ,UAAU,OACd,kBAAC,EAAD,CAASH,KAAMC,KAAK8B,MAAM/B,OAC1B,kBAAC,EAAD,CAAS4B,QAAS3B,KAAK8B,MAAMH,e,GAxCfd,IAAMH,WCKJqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.388035fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iansarker.0fe4e017.jpg\";","import React, {Component} from 'react';\n\nimport '../styles/Sidebar.css';\nimport '../styles/styles.css';\nimport Image from '../img/iansarker.jpg';\n\n\nexport default class Sidebar extends Component {\n    render() {\n        const info = this.props.info;\n        return(\n            <div className=\"sidebar\">\n                <div className=\"image-section\">\n                    <img className=\"figure\" src={Image} alt=\"image\"/>\n                </div>\n                <h2 className=\"info-name strong\">{info.name}</h2>\n                <div className=\"info\">\n                    <p>{info.dept},</p>\n                    <p>{info.institute}</p>\n                    <div>\n                        <strong className=\"strong\">Email: </strong>\n                        <span>{info.email}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport '../styles/About.css';\nimport '../styles/styles.css';\n\n\nclass About extends React.Component {\n    render() {\n        return(\n            <div className=\"component\">\n                <h1 className=\"header-title strong\">About</h1>\n                <div className=\"aboutme\">\n                    <p>{this.props.about}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\n\nimport '../styles/Publicaions.css';\nimport '../styles/styles.css';\n\nclass Publicaions extends React.Component {\n    render() {\n        const publications = this.props.publications;\n\n        const publicationList = publications.map(publication => {\n            return(\n                <li className=\"item-name\" key={publication.id.toString()}>{publication.title}</li>\n            );\n        })\n\n        return(\n            <div className=\"component\">\n                <h1 className=\"header-title strong\">Publication</h1>\n                <div className=\"publications-list\">\n                    <ul className=\"list-style-view\">\n                        {publicationList}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Publicaions;","import React from 'react';\n\nimport '../styles/Publicaions.css';\nimport '../styles/styles.css';\n\nclass Publicaions extends React.Component {\n    render() {\n        const interests = this.props.interests;\n        const interestList = interests.map(interest => {\n            return(\n                <li className=\"item-name\" key={interest.id}>{interest.name}</li>\n            );\n        })\n\n        return(\n            <div className=\"component\">\n                <h1 className=\"header-title strong\">Interests</h1>\n                <div className=\"publications-list\">\n                    <ul className=\"list-style-view\">\n                        {interestList}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Publicaions;","import React, {Component} from 'react';\n\nimport About from './About';\nimport Publicaions from './Publicaions';\nimport Interest from './Interest';\nimport '../styles/Content.css';\n\n\nexport default class Content extends Component {\n    render() {\n        const content = this.props.content;\n        return(\n            <div className=\"content\">\n\t\t\t\t<About about={content.about} />\n                <Publicaions publications={content.publications}/>\n                <Interest interests={content.interests}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport Sidebar from './components/Sidebar';\nimport Content from './components/Content';\n\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinfo: {\n\t\t\t\tname: 'Anis Sarker',\n\t\t\t\tdept: 'Department of Computer Science & Engineering',\n\t\t\t\tinstitute: 'Independent University, Bangladesh(IUB)',\n\t\t\t\temail: 'shahidsarker95@hotmail.com'\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tabout: 'I am a Research Assistant at AGenCy Lab @IUB. I received my Bachelor of Science degree in \\\n\t\t\t\tComputer Science at Independent University, Bangladesh(IUB). I have a very broad research interest \\\n\t\t\t\tin Machine Learning and Computer Vision. My current research involves in land use land cover segmentation \\\n\t\t\t\tusing high spatial resolution satellite images.',\n\n\t\t\t\tpublications: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\ttitle: 'A.B.S Nayeem, A Sarkar, A.A Ali, M.A. Amin, A.K.M Rahman, \"LULC Segmentation of RGB Satellite \\\n\t\t\t\t\t\tImage Using FCN-8\", 3rd SLAAI International Conference on Artificial Intelligence, Sri Lanka , 2019'\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tinterests: [\n\t\t\t\t\t{id: 1, name: 'Machine Learning'},\n\t\t\t\t\t{id: 2, name: 'Computer Vision'},\n\t\t\t\t\t{id: 3, name: 'Artificial Intelligence'},\n\t\t\t\t\t{id: 4, name: 'Psychology'},\n\t\t\t\t\t{id: 5, name: 'Philosophy'},\n\t\t\t\t]\n\t\t\t}\n\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Sidebar info={this.state.info}/>\n\t\t\t\t<Content content={this.state.content}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}